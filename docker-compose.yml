version: "3.8"

x-common-config: &common-config
  networks:
    - rabbitmq_go_net
  secrets:
    - DB_USERNAME
    - DB_PASSWORD
    - DB_URI
    - NODE_ENV
    - DB_KEYFILE

services:
  app:
    build:
      context: ./api
    ports:
      - "3000:3000"
    env_file:
      - ./api/.env
    depends_on:
      - db
    configs:
      - source: app_config
        target: /app/config.env
    <<: *common-config
  db:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    
    volumes:
      - ./mongod.conf:/etc/mongod.conf
    <<: *common-config
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_USERNAME}:${DB_PASSWORD}@db:27017/
    <<: *common-config
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    command: >
      sh -c '
        rabbitmq-plugins enable rabbitmq_management;
        rabbitmqctl add_user root root;
        rabbitmqctl set_user_tags root administrator;
        rabbitmqctl set_permissions -p / root ".*" ".*" ".*";
        exec rabbitmq-server '
    <<: *common-config

secrets:
  DB_USERNAME:
    file: ./configs/keys/DB_USERNAME.txt
  DB_PASSWORD:
    file: ./configs/keys/DB_PASSWORD.txt
  DB_URI:
    file: ./configs/keys/DB_URI.txt
  NODE_ENV:
    file: ./configs/keys/NODE_ENV.txt
  DB_KEYFILE:
    file: ./configs/keys/DB_KEYFILE.txt

configs:
  app_config:
    file: ./configs/keys/config.env
  mongo_config:
    file: ./configs/mongod.conf

networks:
  rabbitmq_go_net:
    driver: bridge
    name: rabbitmq_go_net